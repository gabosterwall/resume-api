openapi: 3.1.0
info:
  title: Resume API
  version: 1.0.0
paths:
  /api/resume:
    get:
      summary: Get the whole resume
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successful response
      description: |
        Requires a valid Bearer token in the Authorization header.

    post:
      summary: Create a new resume
      security:
        - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              # Add your request body schema here
      description: |
        Requires a valid Bearer token in the Authorization header.

  /api/resume/contact:
    get:
      summary: Get contact information
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successful response
      description: |
        Requires a valid Bearer token in the Authorization header.

    post:
      summary: Create or update contact information
      security:
        - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              # Add your request body schema here
      description: |
        Requires a valid Bearer token in the Authorization header.

  # Repeat the above pattern for other resume sections (skills, education, experience, projects, weaknesses)

  /api/users:
    post:
      summary: Register a new user
      description: Register a new user with the provided name, email, and password.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
                - name
                - email
                - password
      responses:
        '201':
          description: User successfully registered.
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  name:
                    type: string
                  email:
                    type: string
                  role:
                    type: string
        '400':
          description: Bad request. Please fill in all fields or user already exists.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /api/users/login:
    post:
      summary: Log in as a user
      description: Authenticate a user using their email and password.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '200':
          description: User successfully logged in.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  role:
                    type: string
        '400':
          description: Invalid credentials.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /api/messages:
    get:
      summary: Get user messages
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successful response
      description: |
        Requires a valid Bearer token in the Authorization header.

    post:
      summary: Send a new message
      security:
        - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              # Add your request body schema here
      description: |
        Requires a valid Bearer token in the Authorization header.

  # Add additional paths for other message-related operations (e.g., getAllMessage, updateMessage, deleteMessage)

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
